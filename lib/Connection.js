// Generated by CoffeeScript 1.10.0
(function() {
  var Connection, path, queryString, url;

  url = require('url');

  queryString = require('query-string');

  path = require('path');

  Connection = (function() {
    function Connection(settings) {
      var key, query, ref, value;
      this.settings = settings;
      if (typeof this.settings === 'string') {
        this.settings = url.parse(this.settings);
      }
      if (this.settings.auth) {
        ref = this.settings.auth.split(':'), this.settings.user = ref[0], this.settings.password = ref[1];
        this.settings.username = this.settings.user;
      }
      if (this.settings.query) {
        query = queryString.parse(this.settings.query);
        for (key in query) {
          value = query[key];
          this.settings[key] = value;
        }
      }
    }

    Connection.prototype.connect = function(callback) {
      return callback(new Error('not implemented'));
    };

    Connection.prototype.close = function(callback) {
      return callback(new Error('not implemented'));
    };

    Connection.prototype.saveStream = function(stream, id, callback) {
      return callback(new Error('not implemented'));
    };

    Connection.prototype.getStream = function(id, callback) {
      return callback(new Error('not implemented'));
    };

    Connection.prototype.getPath = function(id) {
      if (id == null) {
        id = '';
      }
      return path.join(this.settings.pathname || '/', String(id));
    };

    return Connection;

  })();

  module.exports = Connection;

}).call(this);
